import math
import scipy.integrate as integrate
import scipy.special as special


########################################
# inputs
#print('Enter the di-electric constant:')
er=4.3; #int(input());
#print('Enter the substrate thickness (in mm)')
h_mm=1.57; #int(input());
#print('Enter the frequency (GHz):')
f_GHz=2.4; #int(input());


#######################################
h = h_mm / 1000;
f = f_GHz*1e9;
u0 = 1.25663706e-6; #permeability of free space
e0 = 8.85418782e-12; #permittivity of free space
eta = 3.767303135e2; #wave impedance of free space
c0 = 299792458; #speed of light
lda = c0/f;
Z0 = 50;
# patch dimension calculation
wid=c0/(math.sqrt((er+1)/2)*2*f);
e_eff = ((er+1)/2) + ((er-1)/2) / math.sqrt(1 + 12*h/wid);
del_l = (((e_eff+0.3)*((wid/h)+0.264))/((e_eff-0.258)*((wid/h)+0.8)))*(0.412*h);
L = 0.5 * lda / math.sqrt(er) - 2 * del_l;
#L = 0.49 * lda / math.sqrt(er) ;
L_mm = L * 1000;

# corner truncation
Q0 = c0 * math.sqrt(er) / 4 / f/ h;
sRatio = 1 / 2 / Q0;
a_mm = L_mm * math.sqrt(sRatio);

# Feed calculation
def impedancewidth(er, h_mm, Z0):
    A = (Z0 / 60 * math.sqrt((er + 1) / 2)  ) + ( (er-1) / (er+1) * (0.23 + 0.11/er));
    B = 60 * math.pi ** 2 / Z0 / math.sqrt(er);

    if A > 1.52:
        wl_mm = h_mm * 8 * math.exp(A) / ( math.exp(2*A) - 2)
    else:
        wl_mm = 2 * h_mm / math.pi * (B - 1 - math.log(2*B - 1, math.e) + (er - 1) / (2 * er) * (math.log(B - 1, math.e) + 0.39 - 0.61 / er)) ;

    return wl_mm

wl_mm = impedancewidth(er, h_mm, Z0)
# Input testimpedance for square patch
Za = 90 * er ** 2 / (er-1);

# Quarter wave Transformer
Zqt = math.sqrt(100 * Z0);
qt_W_mm = impedancewidth(er, h_mm, Zqt);
e_eff_qt = ((er+1)/2) + ((er-1)/2) / math.sqrt(1 + 12*h_mm/qt_W_mm);
print(e_eff_qt)
qt_L = lda / 4 / math.sqrt(e_eff_qt);
qt_L_mm = qt_L * 1000;

print("Design parameters: f = {0} GHz, er = {1}, h = {2} mm".format(f_GHz, er, h_mm));
print("Square Patch Specs: Side length = {0} mm, Truncation length = {1} mm".format( round(L_mm,2), round(a_mm,2)));
print("Feed width 50 ohms = {0} mm, imput impedance = {1} ohms, Quarter-wave length = {2} mm, Quarter-wave width = {3} mm".format( round(wl_mm,2), round(Za,2), round(qt_L_mm,2), round(qt_W_mm,2)));
